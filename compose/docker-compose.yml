version: '3.8'

services:

  # https://traefik.io/
  traefik:
    restart: always
    image: "traefik:v2.6"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      # https://stackoverflow.com/questions/61572512/expose-traefik-dashboard-to-subdomain
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`ingress.local`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks: # Allow traefik to view public and private facing applications.
      - internal
      - external

  # https://pi-hole.net/
  # https://github.com/pi-hole/docker-pi-hole/blob/master/docker_run.sh
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    # Requires 53 to be free, this mandates extra steps on Ubuntu by default
    # https://codepre.com/ubuntu-how-to-release-port-53-used-by-systemd-resolved.html
    ports:
      - "53:53/tcp"
      - "53:53/udp"
    dns:
      - 127.0.0.1
      - 9.9.9.9
    environment:
      TZ: "Pacific/Auckland"
      WEBPASSWORD: 'PASSWORD'
      PIHOLE_DNS_: 9.9.9.9;149.112.112.112;1.1.1.1
      DNSSEC: 'true'
      ServerIP: 192.168.0.6 # Actual server IP. Matches DHCP conf file IP
      VIRTUAL_HOST: pihole.local # Same as port traefik config
      DNSMASQ_LISTENING: all
      DHCP_ACTIVE: 'true'
      #      DHCP_START: 192.168.0.100
      #      DHCP_END: 192.168.0.199
      #      DHCP_ROUTER: 192.168.0.1
      #      DHCP_LEASETIME: 6
      WEBTHEME: default-dark
      PIHOLE_DOMAIN: lan
    volumes:
      - '/services/pihole/pihole:/etc/pihole/'
      - '/services/pihole/dnsmasq.d:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    restart: unless-stopped
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.local`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.http.routers.pihole.entrypoints=web"
      - "traefik.http.middlewares.pihole.headers.customresponseheaders.Access-Control-Allow-Origin=home.local"
      - "traefik.http.middlewares.pihole.headers.customresponseheaders.X-Powered-By=myass"
      - "traefik.http.routers.pihole.middlewares=pihole"


  speedtest:
    restart: unless-stopped
    image: lscr.io/linuxserver/librespeed
    container_name: speedtest
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Pacific/Auckland
      PASSWORD: testing123
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.speedtest.rule=Host(`speedtest.local`)"
      - "traefik.http.routers.speedtest.entrypoints=web"
    networks:
      - internal

  homer:
    restart: unless-stopped
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - '/compose/homer.yml:/www/assets/config.yml'
    expose:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homer.rule=Host(`homer.local`, `home.local`)"
      - "traefik.http.routers.homer.entrypoints=web"
    networks:
      - internal

  radarr:
    restart: unless-stopped
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      #      - /path/to/data:/config
      - /mnt/storage/movies:/movies #optional
      - /mnt/storage/downloads:/downloads #optional
    expose:
      - 7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.local`)"
      - "traefik.http.routers.radarr.entrypoints=web"
    networks:
      - internal

  sonarr:
    restart: unless-stopped
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
#      - /path/to/data:/config
      - /mnt/storage/tvseries:/tv #optional
      - /mnt/storage/downloads:/downloads #optional
    expose:
      - 8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.local`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
    networks:
      - internal

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - internal

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - /compose/prometheus.yml:/etc/prometheus/prometheus.yml
      - /mnt/storage/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prom.rule=Host(`prom.local`)"
      - "traefik.http.routers.prom.entrypoints=web"
    expose:
      - 9090
    networks:
      - internal

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
    expose:
      - 3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.local`)"
      - "traefik.http.routers.grafana.entrypoints=web"
    volumes:
      - /mnt/storage/grafana:/var/lib/grafana:rw
    networks:
      - internal

networks:
  internal:
  external: