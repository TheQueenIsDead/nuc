version: '3.8'

# All services meant to be run on pi.local domain.

services:

  # https://pi-hole.net/
  # https://github.com/pi-hole/docker-pi-hole/blob/master/docker_run.sh
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    restart: always
    # Requires 53 to be free, this mandates extra steps on Ubuntu by default
    # https://codepre.com/ubuntu-how-to-release-port-53-used-by-systemd-resolved.html
    # Also requires 53 to be bound to a specific address in order to preserve name resolution in other containers
    # https://discourse.pi-hole.net/t/solve-dns-resolution-in-other-containers-when-using-docker-pihole/31413
    ports:
      - "53:53/tcp"
      - "${INGRESS_IP}:53:53/udp"
    dns:
      - 127.0.0.1
      - 9.9.9.9
    environment:
      # https://github.com/pi-hole/docker-pi-hole#environment-variables
      TZ: "Pacific/Auckland"
      WEBPASSWORD: 'PASSWORD'
      PIHOLE_DNS_: 9.9.9.9;149.112.112.112;1.1.1.1
      DNSSEC: 'true'
      ServerIP: 192.168.0.169 # Actual server IP. Matches DHCP conf file IP
      VIRTUAL_HOST: "${PIHOLE_FQDN}"
      CORS_HOSTS: "${HOMER_FQDN}"
      DNSMASQ_LISTENING: all
      DHCP_ACTIVE: 'true'
      WEBTHEME: default-dark
      PIHOLE_DOMAIN: lan
    volumes:
      - '/services/pihole/pihole:/etc/pihole/'
      - '/services/pihole/dnsmasq.d:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    networks:
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`${PIHOLE_FQDN}`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      - "traefik.http.routers.pihole.entrypoints=web"
